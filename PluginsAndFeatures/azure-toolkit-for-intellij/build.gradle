plugins {
    id "org.jetbrains.intellij" version "0.4.21"
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
    id "de.undercouch.download" version "4.0.4"
    id "com.github.ben-manes.versions" version "0.28.0"
    id "io.freefair.aspectj.post-compile-weaving" version "5.3.0"
    id "com.github.spotbugs" version "4.6.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = javaVersion
    ajc {
        enabled = false
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = javaVersion
    ajc {
        enabled = false
    }
}

import com.microsoft.azuretools.plugins.BundleBuildIDEAPlugin
import org.apache.tools.ant.filters.*

processResources {
    filesMatching('**/ApplicationInsights.xml') {
        filter(ReplaceTokens, tokens: ["applicationinsights.key": project.property("applicationinsights.key")])
    }
}

group 'com.microsoft.azuretools'

compileJava {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

compileKotlin {
    kotlinOptions.jvmTarget = javaVersion
}
compileTestKotlin {
    kotlinOptions.jvmTarget = javaVersion
}

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

//apply plugin: 'checkstyle'
//
//checkstyle {
//    toolVersion = '8.30'
//    configFile = new File('config/checkstyle/checkstyle.xml')
//    showViolations = false
//}

intellij {
    pluginName = 'azure-toolkit-for-intellij'
    version = intellij_version
    updateSinceUntilBuild = Boolean.valueOf(updateVersionRange)
    plugins = ['java', 'maven', 'gradle', dep_plugins, "properties", 'markdown', 'terminal']
	downloadSources = Boolean.valueOf(sources)
}

sourceSets {
    main {
        java.srcDirs 'src'
        kotlin.srcDirs 'src'
        resources {
            srcDir 'resources'
            exclude 'bundle/**'
        }
    }
    test {
        java {
            srcDir 'Test/java'
        }
        kotlin.srcDirs 'Test/java'
        resources {
            srcDir 'Test/resources'
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    compile.exclude module:'slf4j-api'
    compile.exclude module:'log4j'
    compile.exclude module:'stax-api'
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

apply plugin: 'java'

dependencies {
    compile 'com.microsoft.sqlserver:mssql-jdbc:6.4.0.jre8'
    compile 'commons-io:commons-io:2.7'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    compile 'net.minidev:json-smart:2.3'
    compile 'com.microsoft.azure:azure-client-runtime:1.7.5', { force = true }
    compile 'com.microsoft.azure:azure-client-authentication:1.7.5', { force = true }
    compile 'com.microsoft.azure:azure-toolkit-springcloud-lib:0.4.0-SNAPSHOT', { force = true }
    aspect "com.microsoft.azure:azure-toolkit-common-lib:0.4.0-SNAPSHOT"
    compile 'com.microsoft.azuretools:azuretools-core:3.50.0-SNAPSHOT', {
        exclude group: "com.microsoft.azure", module: "azure-client-authentication"
        exclude group: "com.microsoft.azure", module: "azure-client-runtime"
        exclude group: "javax.xml.bind", module: "jaxb-api"
    }
    compile 'com.microsoft.azuretools:azure-explorer-common:3.50.0-SNAPSHOT', {
        exclude group: "com.microsoft.azure", module: "azure-client-authentication"
        exclude group: "com.microsoft.azure", module: "azure-client-runtime"
        exclude group: "javax.xml.bind", module: "jaxb-api"
    }
    compile 'com.microsoft.azuretools:hdinsight-node-common:3.50.0-SNAPSHOT', {
        exclude group: "com.microsoft.azure", module: "azure-client-authentication"
        exclude group: "com.microsoft.azure", module: "azure-client-runtime"
        exclude group: "javax.xml.bind", module: "jaxb-api"
    }
    compile group: 'com.microsoft.azure', name: 'azure-auth-helper', version: '0.6.0'
    compile 'com.microsoft.azure:azure-tools-common:0.10.0'
    compile group: 'com.microsoft.azure.appplatform.v2020_07_01', name: 'azure-mgmt-appplatform', version: '1.0.0-beta'
    compile group: 'org.dom4j', name: 'dom4j', version: '2.1.3', {
        exclude group: "javax.xml.stream", module: "stax-api"
        exclude group: "xpp3", module: "xpp3"
        exclude group: "pull-parser", module: "pull-parser"
        exclude group: "net.java.dev.msv", module: "xsdlib"
    }
    compile group: 'jaxen', name: 'jaxen', version: '1.2.0'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    compile group: 'com.jcraft', name: 'jsch', version: '0.1.55'
    compile group: 'com.neovisionaries', name: 'nv-websocket-client', version: '2.9'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.23'

    testCompile 'junit:junit:4.13'
    testCompile 'info.cukes:cucumber-junit:1.2.6'
    testCompile 'info.cukes:cucumber-java:1.2.6'
    testCompile 'org.mockito:mockito-core:2.7.22'
    testCompile 'org.assertj:assertj-swing-junit:3.9.2'

    testCompile 'com.github.tomakehurst:wiremock:2.26.3'
    testCompile 'org.powermock:powermock-module-junit4:1.7.0RC4'
    testCompile 'org.powermock:powermock-api-mockito2:1.7.0RC4'
    testCompile 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile "org.jetbrains.kotlin:kotlin-stdlib"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
}

test {
    testLogging.showStandardStreams = true
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task cucumberPackJar(type: Jar) {
    appendix = 'pathing'

    doFirst {
        manifest {
            attributes "Class-Path": configurations.cucumberRuntime.files.collect {
                it.toURI().toString().replaceFirst(/file:\/+/, '/')
            }.join(' ')
        }
    }
}

buildSearchableOptions.onlyIf {false}

task cucumber() {
    dependsOn compileTestJava, cucumberPackJar
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = files(sourceSets.main.output, sourceSets.test.output, cucumberPackJar.archivePath)
            args = [
                '--plugin', 'progress',
                '--glue', 'com.microsoft.azure.hdinsight.spark.common',
                '-m',
                'Test/resources']
        }
    }
}

test.dependsOn cucumber
// buildPlugin.dependsOn test

defaultTasks 'buildPlugin'

wrapper() {
    gradleVersion = '6.5'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

apply plugin: BundleBuildIDEAPlugin

installIdea.dependsOn buildPlugin
//installIdea.dependsOn checkstyleMain

patchPluginXml {
    sinceBuild = patchPluginXmlSinceBuild
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
    ignoreFailures = true
    showStackTraces = true
    showProgress = true
    effort = 'max'
    reportLevel = 'high'
    maxHeapSize = '1g'
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=en' ]
    includeFilter = file("$rootProject.projectDir/../../tools/spotbugs-security-include.xml")
    excludeFilter = file("$rootProject.projectDir/../../tools/spotbugs-security-exclude.xml")
}
