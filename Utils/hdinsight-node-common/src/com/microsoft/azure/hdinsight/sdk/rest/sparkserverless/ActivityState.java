/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.hdinsight.sdk.rest.sparkserverless.models;

import java.util.Collection;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.microsoft.rest.ExpandableStringEnum;

/**
 * Defines values for ActivityState.
 */
public final class ActivityState extends ExpandableStringEnum<ActivityState> {
    /** Static value Accepted for ActivityState. */
    public static final ActivityState ACCEPTED = fromString("Accepted");

    /** Static value Compiling for ActivityState. */
    public static final ActivityState COMPILING = fromString("Compiling");

    /** Static value Ended for ActivityState. */
    public static final ActivityState ENDED = fromString("Ended");

    /** Static value New for ActivityState. */
    public static final ActivityState NEW = fromString("New");

    /** Static value Queued for ActivityState. */
    public static final ActivityState QUEUED = fromString("Queued");

    /** Static value Running for ActivityState. */
    public static final ActivityState RUNNING = fromString("Running");

    /** Static value Scheduling for ActivityState. */
    public static final ActivityState SCHEDULING = fromString("Scheduling");

    /** Static value Starting for ActivityState. */
    public static final ActivityState STARTING = fromString("Starting");

    /** Static value Paused for ActivityState. */
    public static final ActivityState PAUSED = fromString("Paused");

    /** Static value WaitingForCapacity for ActivityState. */
    public static final ActivityState WAITING_FOR_CAPACITY = fromString("WaitingForCapacity");

    /**
     * Creates or finds a ActivityState from its string representation.
     * @param name a name to look for
     * @return the corresponding ActivityState
     */
    @JsonCreator
    public static ActivityState fromString(String name) {
        return fromString(name, ActivityState.class);
    }

    /**
     * @return known ActivityState values
     */
    public static Collection<ActivityState> values() {
        return values(ActivityState.class);
    }
}
